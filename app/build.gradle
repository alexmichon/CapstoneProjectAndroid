apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'jacoco-android'

apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "edu.berkeley.capstoneproject.capstoneprojectandroid"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        fake {
            applicationIdSuffix ".fake"
            versionNameSuffix "-fake"

            testInstrumentationRunner "edu.berkeley.capstoneproject.capstoneprojectandroid.FakeTestRunner"
        }

        fakeBluetooth {
            applicationIdSuffix ".fake.bluetooth"
            versionNameSuffix "-fake.bluetooth"
        }

        fakeNetwork {
            applicationIdSuffix ".fake.network"
            versionNameSuffix "-fake.network"
        }

        full {
            applicationIdSuffix ".full"
            versionNameSuffix "-full"

            //testInstrumentationRunner "edu.berkeley.capstoneproject.capstoneprojectandroid.FullTestRunner"
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
        }

        instrumentTest.setRoot('src/androidTest/')

        fake {
            java.srcDirs = ['src/main/java', 'src/common/java', 'src/fakeBluetooth/java', 'src/fakeNetwork/java']
            //manifest.srcFile 'src/fakeAll/AndroidManifest.xml'
        }

        fakeBluetooth {
            java.srcDirs = ['src/main/java', 'src/common/java', 'src/fakeBluetooth/java', 'src/fullNetwork/java']
            //manifest.srcFile 'src/fakeBluetooth/AndroidManifest.xml'
        }

        fakeNetwork {
            java.srcDirs = ['src/main/java', 'src/common/java', 'src/fullBluetooth/java', 'src/fakeNetwork/java']
            //manifest.srcFile 'src/fakeNetwork/AndroidManifest.xml'
        }

        full {
            java.srcDirs = ['src/main/java', 'src/common/java', 'src/fullBluetooth/java/', 'src/fullNetwork/java']
            //manifest.srcFile 'src/full/AndroidManifest.xml'
            //instrumentTest.setRoot('src/androidTestFull')
        }

        test {
            java.srcDir 'src/test'
        }

        androidTest {
            java.srcDir 'src/androidTest'
        }

        //test {
        //    java.srcDirs = ['src/main/java', 'src/full/java', 'src/test/java']
        //}

    }



    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'com.android.support:support-annotations:26.1.0'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:support-annotations:26.1.0'

    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    compile 'com.google.code.gson:gson:2.7'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile "com.github.akarnokd:rxjava2-interop:0.10.7"

    compile 'com.polidea.rxandroidble:rxandroidble:1.4.3'
    fakeBluetoothCompile "com.polidea.rxandroidble:mockclient:1.4.3"
    fakeCompile "com.polidea.rxandroidble:mockclient:1.4.3"

    compile 'com.google.dagger:dagger:2.13'
    apt 'com.google.dagger:dagger-compiler:2.13'
    androidTestApt 'com.google.dagger:dagger-compiler:2.13'

    compile 'com.google.dagger:dagger-android:2.13'
    compile 'com.google.dagger:dagger-android-support:2.13' // if you use the support libraries
    apt 'com.google.dagger:dagger-android-processor:2.13'
    apt 'com.google.dagger:dagger-compiler:2.13'

    testCompile 'com.google.dagger:dagger:2.13'
    androidTestApt 'com.google.dagger:dagger-compiler:2.13'

    compile 'com.jakewharton:butterknife:8.8.1'
    apt 'com.jakewharton:butterknife-compiler:8.8.1'

    compile 'com.amitshekhar.android:rx2-android-networking:1.0.0'

    compile 'com.jakewharton.timber:timber:4.5.1'

    compile 'com.hannesdorfmann.mosby3:viewstate:3.1.0'

    testCompile 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
//    testCompile group: 'junit', name: 'junit-dep', version: '4.10'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'

    //testFullCompile 'junit:junit:4.12'
    //testFullCompile 'org.mockito:mockito-core:1.10.19'

    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'

    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'

    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test:rules:1.0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:3.0.1'
}
